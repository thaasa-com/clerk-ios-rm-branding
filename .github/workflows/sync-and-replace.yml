name: Sync upstream & comment out Clerk branding

on:
  schedule:
    - cron: "15 9 * * *"      # daily at 09:15 UTC; tweak as you like
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout fork
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "bot"
          git config user.email "bot@users.noreply.github.com"

      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/clerk/clerk-ios.git
          git fetch upstream --prune

      - name: Detect upstream default branch
        id: branch
        run: |
          DEFAULT_BRANCH=$(git remote show upstream | sed -n '/HEAD branch/s/.*: //p')
          echo "branch=$DEFAULT_BRANCH" >> $GITHUB_OUTPUT

      - name: Preserve replacement script
        run: |
          echo "Preserving the replacement script before syncing..."
          mkdir -p /tmp/scripts_backup
          cp scripts/replace_branding.sh /tmp/scripts_backup/ 2>/dev/null || echo "Script not found in current state"

      - name: Sync fork branch to upstream
        run: |
          git checkout -B "${{ steps.branch.outputs.branch }}"
          git reset --hard "upstream/${{ steps.branch.outputs.branch }}"

      - name: Restore and run replacement script
        run: |
          echo "Current directory: $(pwd)"
          echo "Restoring replacement script..."

          # Create scripts directory and restore the script
          mkdir -p scripts
          if [ -f /tmp/scripts_backup/replace_branding.sh ]; then
            cp /tmp/scripts_backup/replace_branding.sh scripts/
            echo "Script restored successfully"
          else
            echo "Script backup not found, checking if it exists in upstream..."
            if [ -f scripts/replace_branding.sh ]; then
              echo "Script found in upstream"
            else
              echo "Error: Replacement script not found!"
              exit 1
            fi
          fi

          echo "Contents of scripts directory:"
          ls -la scripts/

          echo "Making sure script is executable..."
          chmod +x scripts/replace_branding.sh

          echo "Running replacement script..."
          bash scripts/replace_branding.sh

          echo "Checking for changes..."
          if ! git diff --quiet; then
            echo "Changes detected, committing..."
            git add -A
            git commit -m "Comment out Clerk branding views"
            echo "Changes committed successfully."
          else
            echo "No changes detected."
          fi

      # Optional build check â€” enable only if the package builds on Linux.
      # - name: (Optional) Swift build
      #   uses: swift-actions/setup-swift@v1
      #   with:
      #     swift-version: "5.9"
      #   # If it compiles on Linux:
      #   run: swift build -c release

      - name: Push changes
        run: |
          # Force-push ensures your fork stays exactly: upstream + your edits
          git push --force origin HEAD
